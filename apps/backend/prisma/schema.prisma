generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  WORKER
}

enum ProjectStatus {
  DRAFT
  ACTIVE
  ON_HOLD
  DONE
  CANCELLED
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  BLOCKED
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum BudgetType {
  MATERIAL
  LABOR
  EQUIPMENT
  OTHER
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  role         Role     @default(WORKER)
  projects     Project[] @relation("ManagedProjects")
  tasks        Task[]    @relation("AssignedTasks")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  code        String?       @unique
  description String?
  status      ProjectStatus @default(DRAFT)
  startDate   DateTime?
  endDate     DateTime?

  managerId   Int?
  manager     User?         @relation("ManagedProjects", fields: [managerId], references: [id])

  sites       Site[]
  tasks       Task[]
  budgetLines BudgetLine[]

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([managerId])
}

model Site {
  id        Int      @id @default(autoincrement())
  name      String
  address   String?
  startDate DateTime?
  endDate   DateTime?

  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])

  tasks     Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    Priority   @default(MEDIUM)
  dueDate     DateTime?

  assigneeId  Int?
  assignee    User?      @relation("AssignedTasks", fields: [assigneeId], references: [id])

  projectId   Int
  project     Project    @relation(fields: [projectId], references: [id])

  siteId      Int?
  site        Site?      @relation(fields: [siteId], references: [id])

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([projectId])
  @@index([assigneeId])
}

model BudgetLine {
  id        Int        @id @default(autoincrement())
  label     String
  type      BudgetType @default(OTHER)
  quantity  Float      @default(1)
  unitCost  Float      @default(0)
  note      String?

  projectId Int
  project   Project    @relation(fields: [projectId], references: [id])

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([projectId])
}
